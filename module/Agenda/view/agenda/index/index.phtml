<?php
echo $this->headLink()
        ->prependStylesheet($this->basePath() . '/js/codebase/dhtmlxscheduler.css')
        ->prependStylesheet($this->basePath() . '/js/multisearch/bootstrap-tagsinput.css')
        ->prependStylesheet($this->basePath() . '/js/multisearch/app.css');
echo $this->headScript()
        ->prependFile($this->basePath() . '/js/codebase/locale/locale_pt.js')
        ->prependFile($this->basePath() . '/js/codebase/ext/dhtmlxscheduler_recurring.js')
        ->prependFile($this->basePath() . '/js/codebase/ext/dhtmlxscheduler_tooltip.js')
        ->prependFile($this->basePath() . '/js/codebase/dhtmlxscheduler.js')
        ->prependFile($this->basePath() . '/js/multisearch/typeahead.bundle.js')
        ->prependFile($this->basePath() . '/js/multisearch/bootstrap-tagsinput.js');
?>

<style type="text/css" media="screen">
    html, body{
        margin:0px;
        padding:0px;
        height:100%;
        overflow:hidden;
    }	
    .panel-body {
        padding: 0px;
    }
    .dhx_wrap_section {
        overflow: initial !important;
    }
    .dhx_cal_light_rec.dhx_cal_light_wide .dhx_cal_larea {
        overflow: initial !important;
    }
    .dhx_cal_ltext {
        height: auto !important;
        min-height: 30px !important;
        overflow: hidden !important;
    }
    .bootstrap-tagsinput {
        position: absolute;
        z-index: 1000009;
        width: 83%; 
        border-radius: 0px !important;
        font-size: 12px !important;
    }
</style>

<script>
    function init() {

        dhtmlXTooltip.config.className = 'dhtmlXTooltip tooltip';
        dhtmlXTooltip.config.timeout_to_display = 50;
        dhtmlXTooltip.config.delta_x = 15;
        dhtmlXTooltip.config.delta_y = -20;

        scheduler.config.multi_day = true;
        scheduler.config.xml_date = "%Y-%m-%d %H:%i";
        scheduler.config.details_on_dblclick = true;
        scheduler.config.details_on_create = true;

        scheduler.config.event_duration = 35;
        scheduler.config.occurrence_timestamp_in_utc = true;
        scheduler.config.include_end_by = true;
        scheduler.config.repeat_precise = true;
        scheduler.form_blocks["contact_view"] = {
            render: function (sns) {
                var html = '<div class="dhx_cal_ltext" style="height: 31px;">';
                html += '<textarea id="form_convidados"></textarea></div>';
                return html;
            },
            set_value: function (node, value, ev) {
                node.childNodes[0].value = value || "";
                // we must loop through all nodes because we use the autocomplete plugin which sometimes adds
                // additional html elements therefore changing the position of the inputs
                $.each(node.childNodes, function (index, item) {
                    if ($(item).attr("id") == "email") {
                        node.childNodes[index].value = ev.email || "";
                    }
                });
            },
            get_value: function (node, ev) {
                // we must loop through all nodes because we use the autocomplete plugin which sometimes adds
                // additional html elements therefore changing the position of the inputs
                $.each(node.childNodes, function (index, item) {
                    if ($(item).attr("id") == "email") {
                        ev.email = node.childNodes[index].value;
                    }
                });
                return node.childNodes[0].value;
            },
        }

        scheduler.config.lightbox.sections = [
            {name: "Título", height: 50, map_to: "text", type: "textarea", focus: false},
            {name: "description", height: 50, map_to: "details", type: "textarea", focus: false},
            {name: "Convidados", height: 50, map_to: "convidados", type: "contact_view", focus: false},
            {name: "Endereço", height: 43, map_to: "event_location", type: "textarea", default_value: "Rua São José, nº 01, Centro - Fortaleza-CE"},
            //{name: "recorrente", type: "recurring", map_to: "rec_type", button: "recurring"}, //Agendamento Recorrente... implantar posteriormente
            {name: "time", height: 72, type: "time", map_to: "auto"}
        ];

        scheduler.config.full_day = true;
        scheduler.config.buttons_left = ["dhx_save_btn", "dhx_cancel_btn"];
        //scheduler.config.buttons_left = ["dhx_save_btn", "dhx_cancel_btn", "locate_button"];
        //scheduler.locale.labels["locate_button"] = "Localização"; //Implantar posteriormente

        scheduler.init('scheduler_here', new Date(<?php echo date("Y"); ?>, <?php echo date("m") - 1; ?>, <?php echo date("d"); ?>), "day");
        scheduler.load("<?php echo $this->url('agenda', array('action' => 'list-agenda')); ?>", "json");
        var dp = new dataProcessor("<?php echo $this->url('agenda', array('action' => 'addedit-agenda')); ?>");
        dp.init(scheduler);

        scheduler.attachEvent("onBeforeLightbox", function (e) {
            if (scheduler.getState().lightbox_id) {
                console.log('abriu');
                setTimeout(function () {
                          auto_complete();
                }, 0);
                return true;
            } else {
                console.log('abriu');
                setTimeout(function () {
                          auto_complete();
                }, 0);
                return true;
            }
        });
        scheduler.attachEvent("onLightboxButton", function (button_id, node, e) {
            if (button_id == "locate_button") {
                alert("Funções da ação de Localização/Mapa");
            }

            var lightbox_form = scheduler.getLightbox(); // this will generate lightbox form

            var inputs = lightbox_form.getElementsByTagName('input');
            var date_of_end = null;
            for (var i = 0; i < inputs.length; i++) {

                if (inputs[i].name == "date_of_end") {
                    date_of_end = inputs[i];
                    break;
                }
            }

            var repeat_end_date_format = scheduler.date.date_to_str(scheduler.config.repeat_date);
            var show_minical = function () {
                if (scheduler.isCalendarVisible())
                    scheduler.destroyCalendar();
                else {
                    scheduler.renderCalendar({
                        position: date_of_end,
                        date: scheduler.getState().date,
                        navigation: true,
                        handler: function (date, calendar) {
                            date_of_end.value = repeat_end_date_format(date);
                            scheduler.destroyCalendar()
                        }
                    });
                }
            };
            date_of_end.onclick = show_minical;
        });


        scheduler.templates.event_text = function (start, end, ev) {
            return "<b>" + ev.text + "</b><br>" + ev.details + "<br><i>" + ev.event_location + "</i>";
        };

        var format = scheduler.date.date_to_str("%d/%m/%Y %H:%i");
        scheduler.templates.tooltip_text = function (start, end, event) {
            return "<b>Título:</b> " + event.text + "<br/>\n\
                            <b>Descrição:</b> " + event.details + "<br/>\n\
                            <b>Participantes:</b> " + event.convidados + "<br/>\n\
                            <b>Local:</b> " + event.event_location + "<br/>\n\
                            <b>Inicia em:</b> " + format(start) + "<br/>\n\
                            <b>Termina em:</b> " + format(end);
        };
    }
</script>

<?php if (isset($_SESSION['User']['userId'])) { ?>
    <nav>
        <div class="navbar-header pull-right">
            <a id="nav-expander" class="nav-expander fixed">
                <span class="glyphicon" data-icon="&#xe0a5;"></span>
            </a>
        </div>
        <ul class="list-unstyled main-menu">
            <?php foreach ($this->users as $res) { ?>
                <li class="clearfix"><span class="pull-left"><?php echo $res['nome'] . " " . $res['sobrenome']; ?></span> <span class="pull-right"><input type="checkbox" name="situacao-membro" id="<?php echo $res['id']; ?>" <?php if ($res['status'] == "Active") {
            echo "checked";
        } ?> data-size="small" data-on-text="Presente" data-off-text="Ausente" data-on-color="success" data-off-color="danger" data-label-text="< >"></span></li>
    <?php } ?>
        </ul>
    </nav>
<?php } ?>

<div id="scheduler_here" class="dhx_cal_container container" style='width:100%; height:85%;'>
    <div class="dhx_cal_navline">
        <div class="dhx_cal_prev_button">&nbsp;</div>
        <div class="dhx_cal_next_button">&nbsp;</div>
        <div class="dhx_cal_today_button"></div>
        <div class="dhx_cal_date"></div>
        <div class="dhx_cal_tab" name="day_tab" style="right:204px;"></div>
        <div class="dhx_cal_tab" name="week_tab" style="right:140px;"></div>
        <div class="dhx_cal_tab" name="month_tab" style="right:76px;"></div>
    </div>
    <div class="dhx_cal_header">
    </div>
    <div class="dhx_cal_data">
    </div>
</div>

<script>
    var contatos = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('nomecontatos'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        prefetch: '<?php echo $this->url('contatos', array('action' => 'listaemails')); ?>',
        remote: '<?php echo $this->url('contatos', array('action' => 'listaemails')); ?>'
    });

    contatos.initialize();
    contatos.clearPrefetchCache();
    contatos.clearRemoteCache();

    function auto_complete() {
        $('#form_convidados').tagsinput({
            //maxTags: 1, //Limita a quantidade de tags em um input... desativado para permitir ilimitados ou setar um valor
            itemValue: function (item) {
                return item.e_id;
            },
            itemText: function (item) {
                return item.nomecontatos;
            },
            typeaheadjs: {
                name: 'contatos',
                //displayKey: 'nomecontatos',
                displayKey: function (item) {
                    return '<b>' + item.nomecontatos + '</b><br />(' + item.cargocontato + ')<br /><i>&laquo;' + item.e_email + '&raquo;</i>';
                },
                source: contatos.ttAdapter()
            }
        });
    }
</script>